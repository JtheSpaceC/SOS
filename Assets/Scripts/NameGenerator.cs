//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;


namespace AssemblyCSharp
{
	public class NameGenerator
	{
		private string[] maleNames;
		private string[] femaleNames;
		private string[] lastNames;
		private string[] callsigns;


		private static NameGenerator instance;
		private NameGenerator() {}
		
		public static NameGenerator Instance
		{
			get 
			{
				if (instance == null)
				{
					instance = new NameGenerator();
					instance.loadNames("MaleNames", out instance.maleNames);
					instance.loadNames("FemaleNames", out instance.femaleNames);
					instance.loadNames("LastNames", out instance.lastNames);
					instance.loadNames("Callsigns", out instance.callsigns);
				}
				return instance;
			}
		}

		private void loadNames(string file, out string[] names)
		{
			TextAsset bindata = Resources.Load(file) as TextAsset;
			string namesString = bindata.ToString();
			Resources.UnloadAsset(bindata);
			names = namesString.Split('\n');
		}

		public string getRandomFirstName(char gender)
		{
			return gender == 'M' ? getRandomNameFromList(maleNames) : getRandomNameFromList(femaleNames);
		}

		public string getRandomLastName()
		{
			return getRandomNameFromList(lastNames);			
		}

		public string getRandomCallsign()
		{
			return getRandomNameFromList(callsigns);
		}

		string getRandomNameFromList(string[] names)
		{
			return names[UnityEngine.Random.Range(0, names.Length-1)];
		}

		public string[] GetAllMaleNames()
		{
			return maleNames;
		}

		public string[] GetAllFemaleNames()
		{
			return femaleNames;
		}

		public string[] GetAllLastNames()
		{
			return lastNames;
		}
		public string[] GetAllCallsigns()
		{
			return callsigns;
		}
	}
}

